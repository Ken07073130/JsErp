using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;

public partial class lltlEdit : System.Web.UI.Page {
    string UserName = "";
    string GroupID = "";
    public string xh = "";
    string lb = "";
    string djlx = "";
    SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["DatebaseConnection"].ConnectionString);
    SqlCommand Cmd;
    SqlDataReader sdr;
    protected void Page_Load(object sender, EventArgs e) {
        xh = Request.QueryString["xh"];
        djlx = Request.QueryString["djlx"];
        lb = Request.QueryString["lb"].Trim();
        if (!IsPostBack) {
            if (Session["username"] != null) {
                UserName = Session["username"].ToString();   //取出session里面的相应用户权限
                GroupID = Session["GroupID"].ToString();
            }
            else {
                Response.Redirect("Login.aspx");
            }

            if ("ADD" == lb) {
                setDefault();//新增单据设置默认值
            }
            if ("EDIT" == lb) {
                getData();
            }
            controlEnable();

        }
    }


    protected void btnTj_Click(object sender, EventArgs e) {
        //如果发料数量>=需求数量，那么修改完成状态
        if (!tbZFlsl.Text.Equals("") && !tbXqsl.Text.Equals("")) {
            if (Convert.ToInt32(tbZFlsl.Text) >= Convert.ToInt32(tbXqsl.Text)) {
                if (djlx.Equals("LLD")) {
                    tbLlzt.Text = "仓库已发料";
                }
            }
        }
        if ("ADD" == lb) {
            if (addData()) {
                Response.Redirect("lltlEdit.aspx?lb=ADD&djlx=" + tbLx.Text);
            }
        }
        else if ("EDIT" == lb) {
            if (editData()) { //编辑数据成功后
                //Response.Write("<script>alert('提交成功!');</script>");
                Response.Redirect("lltlEdit.aspx?lb=Edit&djlx=" + tbLx.Text);
            }
        }

    }

    //新增时同步增加发料明细列表
    public void AddFlList() {
        string sqlDel = "";
        string sqlAdd = "";
        for (int i = 1; i <= 15; i++) {
            if (Request["tbPh" + i] != null) {
                sqlAdd = sqlAdd + "select '" + tbBh.Text + "', '" + Request["tbPh" + i].ToString() + "', '" + Request["tbFlsl" + i].ToString() + "', '" + Request["tbKcl" + i].ToString() + "', '" + Request["tbKw" + i].ToString() + "', '"
                    + Request["tbCw" + i].ToString() + "', '" + Request["tbPzzk" + i].ToString() + "', '" + Request["tbBz" + i].ToString() + "' union all ";
            }

        }
        if (!sqlAdd.Equals("")) {
            sqlcon.Open();
            SqlTransaction sqlTran = sqlcon.BeginTransaction();
            try {
                sqlDel = "delete from dbo.js_lltld_fllbH where bh='" + tbBh.Text + "'";
                Cmd = new SqlCommand(sqlDel, sqlcon);
                Cmd.Transaction = sqlTran;
                Cmd.ExecuteNonQuery();
                sqlAdd = "insert into dbo.js_lltld_fllbH ( BH, PH, FLSL, KCL, KW, CW, PZZK, BZ ) " + sqlAdd;
                sqlAdd = sqlAdd.Substring(0, sqlAdd.Length - 10);
                Cmd = new SqlCommand(sqlAdd, sqlcon);
                Cmd.Transaction = sqlTran;
                Cmd.ExecuteNonQuery();
                sqlTran.Commit();

            }
            catch (Exception ex) {

            }
            finally {
                sqlcon.Close();
                sqlTran.Dispose();

            }
            sqlcon.Close();
        }
    }

    //获取同步的列表
    public void getFllist() {
        string readOnly = "";
        if (djlx.Equals("LLD")&&tbLly.Text.Equals(Session["UserName"].ToString())){
            readOnly="true";
        } else {
            readOnly="false";
        }
        
        divFlqk.InnerHtml = "";
        divFlqk.InnerHtml = " <table width='760' border='0' cellspacing='0' cellpadding='0' id='tab'>"
                        + "<tr><td style='height: 39px'>批号</td><td style='height: 39px'>发料数量</td><td style='height: 39px'>库存量</td>"
                        + "<td style='height: 39px'>库位</td><td style='height: 39px'>仓位</td><td style='height: 39px'>品质状况</td>"
                        + "<td style='width: 120px'>备注</td><td style='width: 70px'><input onclick='delTr2()' style='width: 90%' type='button' value='删除' /></td> </tr>"
                        + "<tr><td><input  type='text'  style='width:90%' name='tbPh' id='tbPh' value='' " + (readOnly == "true" ? "readonly='readonly'" : "") + " /></td>"
                        + "  <td><input  type='text'  style='width:90%' name='tbFlsl'   id='tbFlsl'  value=''  " + (readOnly == "true" ? "readonly='readonly'" : "") + " /></td>"
                        + "  <td><input  type='text'  style='width:90%' name='tbKcl'   id='tbKcl' value=''  " + (readOnly == "true" ? "readonly='readonly'" : "") + "  /></td>"
                        + "  <td><input  type='text'  style='width:90%' name='tbKw'   id='tbKw' value=''  " + (readOnly == "true" ? "readonly='readonly'" : "") + "  /></td>"
                        + "  <td><input  type='text'  style='width:90%' name='tbCw'   id='tbCw' value=''  " + (readOnly == "true" ? "readonly='readonly'" : "") + "  /></td>"
                        + "  <td><input  type='text'  style='width:90%' name='tbPzzk'   id='tbPzzk' value=''  " + (readOnly == "true" ? "readonly='readonly'" : "") + "  /></td>"
                        + "  <td><input  type='text'  style='width:90%' name='tbBz'   id='tbBz' value=''  " + (readOnly == "true" ? "readonly='readonly'" : "") + "  /></td>"
                        + " <td style='width: 70px'> <input type='button' onclick=\"addTr2('tab', -1)\" value='添加' style='width: 58px' " + (readOnly == "true" ? "disabled='disabled'" : "") + " /></td></tr>";
      
        string sqlstr = "select PH,FLSL,KCL,KW,CW,PZZK,BZ from dbo.js_lltld_fllbH where BH='" + tbBh.Text + "'";
        sqlcon.Open();
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        int i = 1;
        if (sdr.HasRows) {
            divFlqk.InnerHtml = divFlqk.InnerHtml + "<tr><td colspan='7' align='center' style='font-size:18px; font-weight:bold'>已添加列表<td></tr>" +
                 "<tr><td style='height: 39px'>批号</td><td style='height: 39px'>发料数量</td><td style='height: 39px'>库存量</td>"
                           + "<td style='height: 39px'>库位</td><td style='height: 39px'>仓位</td><td style='height: 39px'>品质状况</td>"
                           + "<td style='width: 120px'>备注</td><td style='width: 70px'></td> </tr>";
            while (sdr.Read()) {
                divFlqk.InnerHtml = divFlqk.InnerHtml + "<tr><td><input  type='text' ReadOnly='" + readOnly + "'  style='width:90%'  name='tbPh" + i + "'   id='tbPh" + i + "' value='" + sdr["PH"].ToString() + "' /></td>"
                          + "  <td><input  type='text'  ReadOnly='" + readOnly + "' style='width:90%' name='tbFlsl" + i + "'   id='tbFlsl" + i + "'  value='" + sdr["FLSL"].ToString() + "'/></td>"
                          + "  <td><input  type='text'  ReadOnly='" + readOnly + "' style='width:90%' name='tbKcl" + i + "'   id='tbKcl" + i + "' value='" + sdr["KCL"].ToString() + "'/></td>"
                          + "  <td><input  type='text'  ReadOnly='" + readOnly + "' style='width:90%' name='tbKw" + i + "'   id='tbKw" + i + "' value='" + sdr["KW"].ToString() + "'/></td>"
                          + "  <td><input  type='text'  ReadOnly='" + readOnly + "' style='width:90%' name='tbCw" + i + "'   id='tbCw" + i + "' value='" + sdr["CW"].ToString() + "'/></td>"
                          + "  <td><input  type='text'  ReadOnly='" + readOnly + "' style='width:90%' name='tbPzzk" + i + "'   id='tbPzzk" + i + "' value='" + sdr["PZZK"].ToString() + "'/></td>"
                          + "  <td><input  type='text'  ReadOnly='" + readOnly + "' style='width:90%' name='tbBz" + i + "'   id='tbBz" + i + "' value='" + sdr["BZ"].ToString() + "'/></td>"
                          + " <td><input type='checkbox' name='ckb' " + (readOnly == "true" ? "disabled='disabled'" : "") + " /></td></tr>";
                i++;

            }
        }
        divFlqk.InnerHtml = divFlqk.InnerHtml + " </table>";

        //把i的值赋给bl
        if (i != 1) {
            bl.Value = Convert.ToString(i - 1);
        }
        sdr.Close();
        sqlcon.Close();
    }

    public void getWlxx() {
        string sqlstr = " select a.wlbh,a.wlmc,d.flmc,b.GYSMC,a.lsmxx gg,c.SL,a.dw from dbo.js_xyclbmH a "
                        + " left join dbo.js_sldH c on a.wlbh=c.WLBH "
                        + " left join dbo.js_wlflbH d on a.dlbh=d.fldm and d.dldm='0' "
                        + " left join dbo.js_gysglH b on a.gysbh=b.GYSDM "
                        + " where a.wlbh='" + tbWlbh.Text + "'";
        sqlcon.Open();
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {
                tbWlmc.Text = sdr["wlmc"].ToString();
                tbWllb.Text = sdr["flmc"].ToString();
                tbGysdm.Text = sdr["gysmc"].ToString();
                tbGg.Text = sdr["gg"].ToString();
                tbDw.Text = sdr["dw"].ToString();
            }
        }
        sdr.Close();
        sqlcon.Close();
    }

    //新增时设置默认值
    public void setDefault() {
        DateTime dtSysDate = DateTime.Now;
        tbJbrq.Text = dtSysDate.ToString("yyyy-MM-dd");
        tbZFlsl.Text = "0";
        if (djlx.Equals("LLD")) {
            tbLlzt.Text = "等待仓库发料";
            Button1.Attributes["disabled"] = "disabled";
        }
        else {
            tbLlzt.Text = "等待仓库退料";
        }
        tbLly.Text = UserName;
        tbLx.Text = djlx;
    }


    //跳转到打印页面
    public void btnPrint_Click(object sender, EventArgs e) {
        Response.Redirect("cpkftaPrint.aspx?xh=" + tbBh.Text + " &lb=EDIT" + "&editType=全部");
    }

    //判断控件的可编辑情况
    public void controlEnable() {
        sqlcon.Open();
        String sqlstr = "select lx,mc,dbo.js_func_hasgroup(djmc,'" + UserName + "','',qx) qx from dbo.js_controlEnable where djmc='领料退料单'";
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {
                if ("TEXTBOX" == sdr["lx"].ToString())
                    //((TextBox)FindControl(sdr["mc"].ToString().Trim())).Attributes.Add("readonly","1" == sdr["qx"].ToString()?"false":"true"); 
                    ((TextBox)FindControl(sdr["mc"].ToString().Trim())).Enabled = ("1" == sdr["qx"].ToString());
                else if ("DROPDOWNLIST" == sdr["lx"].ToString())
                    ((DropDownList)FindControl(sdr["mc"].ToString().Trim())).Enabled = ("1" == sdr["qx"].ToString());
                else if ("CHECKBOX" == sdr["lx"].ToString())
                    ((CheckBox)FindControl(sdr["mc"].ToString().Trim())).Enabled = ("1" == sdr["qx"].ToString());
                else if ("CHECKBOXLIST" == sdr["lx"].ToString())
                    ((CheckBoxList)FindControl(sdr["mc"].ToString().Trim())).Enabled = ("1" == sdr["qx"].ToString());
            }
        }
        sqlcon.Close();
        sdr.Close();

    }


    //新增数据
    public Boolean addData() {
        sqlcon.Open();
        //第一步获取编号   年 + 月 + 001,002...
        //tbXsrhqsj.Text = tbJbrq.Text;
        //编号  年+月+001
        String sqlStr = " select  '" + tbLx.Text + "' + csr_init + '-'+replicate('0', 3 - len(max_init)) + cast(max_init as varchar(3)) bh "
                       + " from    ( select    convert(nvarchar(8), getdate(), 112)  csr_init ,case when max(bh) is null then '001' else cast(substring(max(bh), 13, 3) as int) + 1 "
                       + "                    end max_init from dbo.js_lltldH where    convert(nvarchar(10), convert(datetime,JBRQ), 112) = convert(nvarchar(10), getdate(), 112) and lx='" + tbLx.Text + "' "
                       + "        ) A ";
        Cmd = new SqlCommand(sqlStr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {
                tbBh.Text = sdr["bh"].ToString();
            }
        }
        sdr.Close();


        Boolean result = false;
        //根据数据库  前台控件和后台数据库字段对照来自动生成插入语句
        String addSQLSring = "";
        System.Text.StringBuilder zd = new System.Text.StringBuilder();
        System.Text.StringBuilder zdz = new System.Text.StringBuilder();
        String sqlstr = " select mc,zd,lx from dbo.js_controlEnable where djmc = '领料退料单' and charindex('领料退料员',qx)>0  ";
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {
                zd.Append(sdr["zd"].ToString());
                zd.Append(",");
                zdz.Append("'");
                if ("TEXTBOX" == sdr["lx"].ToString()) {
                    zdz.Append(((TextBox)FindControl(sdr["mc"].ToString().Trim())).Text);
                }
                else if ("CHECKBOX" == sdr["lx"].ToString()) {
                    zdz.Append(((CheckBox)FindControl(sdr["mc"].ToString().Trim())).Checked);
                }
                else if ("DROPDOWNLIST" == sdr["lx"].ToString()) {
                    zdz.Append(((DropDownList)FindControl(sdr["mc"].ToString().Trim())).Text);
                }
                else if ("CHECKBOXLIST" == sdr["lx"].ToString()) {
                    String strTemp = "";
                    CheckBoxList cblTemp = (CheckBoxList)FindControl(sdr["mc"].ToString().Trim());
                    for (int i = 0; i < cblTemp.Items.Count; i++) {
                        if (cblTemp.Items[i].Selected) {
                            strTemp = strTemp + cblTemp.Items[i].Text + ',';
                        }
                    }
                    zdz.Append(strTemp.Substring(0, strTemp.Length > 0 ? strTemp.Length : 1 - 1));//全部都没勾选时 空字符串 就substring(0,0)
                }
                zdz.Append("',");
            }
        }
        sdr.Close();



        addSQLSring = "insert into js_lltldH (djlsh,"
                   + zd.ToString().Substring(0, zd.Length - 1)
                   + ") select isnull(max(djlsh),0)+1,"
                   + zdz.ToString().Substring(0, zdz.Length - 1) + " from js_lltldH";
        Cmd = new SqlCommand(addSQLSring, sqlcon);
        Cmd.ExecuteNonQuery();
        sqlcon.Close();


        //增加附表
        AddFlList();

        result = true;
        return result;
    }

    //获取数据
    public void getData() {


        sqlcon.Open();
        //Hash表:
        //ht_zddz 字段对照 存储 前台控件和后台字段名对应关系  KEY:数据库字段名 VALUE:控件名称
        //ht_lxdz 类型对照 前台控件和控件类型对照  KEY:数据库字段名 VALUE：控件类型
        Hashtable ht_zddz = new Hashtable();
        Hashtable ht_lxdz = new Hashtable();
        //ArrayList 存储后台数据库字段名字的列表
        ArrayList listZd = new ArrayList();
        String sqlstr = "select mc,zd,lx from dbo.js_controlEnable where djmc = '领料退料单' ";
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {
                listZd.Add(sdr["zd"].ToString().Trim());//将数据库字段名加入list
                ht_zddz.Add(sdr["zd"].ToString().Trim(), sdr["mc"].ToString().Trim());
                ht_lxdz.Add(sdr["zd"].ToString().Trim(), sdr["lx"].ToString().Trim());
            }
        }
        sdr.Close();
        sqlstr = "select * from dbo.js_lltldH where bh='" + xh + "'";
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {//获取数据时，只有一条数据
                //循环表的所有数据库字段
                foreach (String strZd in listZd) {
                    if ("TEXTBOX" == (string)ht_lxdz[strZd]) {//根据对照表存储的字段类型进行不同类型的转换
                        ((TextBox)FindControl((string)ht_zddz[strZd])).Text = sdr[strZd].ToString().Trim();
                    }
                    else if ("CHECKBOX" == (string)ht_lxdz[strZd]) {
                        ((CheckBox)FindControl((string)ht_zddz[strZd])).Checked = ("True" == sdr[strZd].ToString());
                    }
                    else if ("DROPDOWNLIST" == (string)ht_lxdz[strZd]) {
                        DropDownList ddlTemp = (DropDownList)FindControl((string)ht_zddz[strZd]);
                        int j = 0;
                        for (int i = 0; i < ddlTemp.Items.Count; i++) {
                            if (ddlTemp.Items[i].Text == sdr[strZd].ToString().Trim()) {
                                j = i;//把匹配到的索引赋给j
                                break;
                            }
                        }
                        if (0 == j) { //j=0说明数据库里的值没有匹配到，那么就自己把数据库的值加进去并选定
                            ddlTemp.Items.Add(sdr[strZd].ToString().Trim());
                        }
                        ddlTemp.Text = sdr[strZd].ToString().Trim();
                    }
                    else if ("CHECKBOXLIST" == (string)ht_lxdz[strZd]) {
                        CheckBoxList cblTemp = (CheckBoxList)FindControl((string)ht_zddz[strZd]);
                        //获取的值一一去匹配CHECKBOXLIST的值，若匹配上 则打勾
                        for (int i = 0; i < cblTemp.Items.Count; i++) {
                            if (sdr[strZd].ToString().Trim().IndexOf(cblTemp.Items[i].Text) != -1) {
                                cblTemp.Items[i].Selected = true;
                            }
                        }
                    }

                }
            }
        }
        sdr.Close();
        sqlcon.Close();

        //获取物料信息
        getWlxx();
        //获取发料详细列表
        getFllist();
    }


    //更新数据
    public Boolean editData() {
        Boolean result = false;
        //根据数据库  前台控件和后台数据库字段对照来自动生成插入语句
        String editSQLSring = "";
        System.Text.StringBuilder editEqualSql = new System.Text.StringBuilder();
        sqlcon.Open();
        String sqlstr = " select  mc,lx,zd from   dbo.js_controlEnable where   djmc = '领料退料单'"
                      + " and dbo.js_func_hasgroup('领料退料单','" + Session["UserName"].ToString() + "','',qx)=1 ";
        Cmd = new SqlCommand(sqlstr, sqlcon);
        sdr = Cmd.ExecuteReader();
        if (sdr.HasRows) {
            while (sdr.Read()) {
                editEqualSql.Append(sdr["zd"].ToString());
                editEqualSql.Append("='");
                if ("TEXTBOX" == sdr["lx"].ToString()) {
                    editEqualSql.Append(((TextBox)FindControl(sdr["mc"].ToString().Trim())).Text);
                }
                else if ("CHECKBOX" == sdr["lx"].ToString()) {
                    editEqualSql.Append(((CheckBox)FindControl(sdr["mc"].ToString().Trim())).Checked);
                }
                else if ("DROPDOWNLIST" == sdr["lx"].ToString()) {
                    editEqualSql.Append(((DropDownList)FindControl(sdr["mc"].ToString().Trim())).Text);
                }
                else if ("CHECKBOXLIST" == sdr["lx"].ToString()) {
                    String strTemp = "";
                    CheckBoxList cblTemp = (CheckBoxList)FindControl(sdr["mc"].ToString().Trim());
                    for (int i = 0; i < cblTemp.Items.Count; i++) {
                        if (cblTemp.Items[i].Selected) {
                            strTemp = strTemp + cblTemp.Items[i].Text + ',';
                        }
                    }
                    editEqualSql.Append(strTemp.Substring(0, strTemp.Length > 0 ? strTemp.Length : 1 - 1));
                }
                editEqualSql.Append("',");

            }
        }
        editSQLSring = "update js_lltldH set "
                   + editEqualSql.ToString().Substring(0, editEqualSql.Length - 1)
                   + " where bh='" + xh + "'";
        sdr.Close();
        Cmd = new SqlCommand(editSQLSring, sqlcon);
        Cmd.ExecuteNonQuery();
        sqlcon.Close();

        //发料列表
        AddFlList();

        result = true;
        return result;
    }



}
